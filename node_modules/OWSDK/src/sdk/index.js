import '../bridge/index.js';
import {
  GET_USER_INFO,
  DROP_DOWN_REFRESH,
  PULL_UP_REFRESH,
  ON_MENU_SHARE,
  OPEN_PAGE,
  CLOSE_PAGE,
  GET_LOCATION,
  BACK,
  NAVIGATE_TO,
} from './constant';

const JSBridge = window.JSBridge;
/**
 * 获取用户信息
 * @param  {Object} data [description]
 * @return {[type]}      [description]
 */
export const getUserInfo = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      GET_USER_INFO,
      (res) => {
        resolve(res);
      },
      data
    );
  });

/**
 * 下拉刷新
 * @param  {Object} data [description]
 * @return {[type]}      [description]
 */
export const dropDownRefresh = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      DROP_DOWN_REFRESH,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 上拉加载
 * @return {[type]} [description]
 */
export const pullUpRefresh = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      PULL_UP_REFRESH,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 分享
 * @return {[type]} [description]
 */
export const onMenuShare = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      ON_MENU_SHARE,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 新开webView
 * @param  {Object} data [description]
 * @return {[type]}      [description]
 */
export const openPage = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      OPEN_PAGE,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 新开webView
 * @param  {Object} data [description]
 * @return {[type]}      [description]
 */
export const navigateTo = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      NAVIGATE_TO,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 关闭webView
 * @param  {Object} data [description]
 * @return {[type]}      [description]
 */
export const closePage = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      CLOSE_PAGE,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 获取地理位置信息
 * @param  {[type]} data [description]
 * @return {[type]}      [description]
 */
export const getLocation = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      GET_LOCATION,
      (res) => {
        resolve(res);
      },
      data
    );
  });
/**
 * 返回
 * @param  {Object} data [description]
 * @return {[type]}      [description]
 */
export const back = (data = {}) =>
  new Promise((resolve, reject) => {
    JSBridge.invoke(
      BACK,
      (res) => {
        resolve(res);
      },
      data
    );
  });
