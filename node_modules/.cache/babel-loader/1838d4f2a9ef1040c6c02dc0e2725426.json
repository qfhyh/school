{"remainingRequest":"E:\\QF\\H5-vue\\school\\node_modules\\babel-loader\\lib\\index.js!E:\\QF\\H5-vue\\school\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\QF\\H5-vue\\school\\src\\utils\\request.js","dependencies":[{"path":"E:\\QF\\H5-vue\\school\\src\\utils\\request.js","mtime":1543195925409},{"path":"E:\\QF\\H5-vue\\school\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535070530521},{"path":"E:\\QF\\H5-vue\\school\\node_modules\\babel-loader\\lib\\index.js","mtime":1539569622495},{"path":"E:\\QF\\H5-vue\\school\\node_modules\\eslint-loader\\index.js","mtime":1539569628505}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport axios from 'axios';\nimport { Toast, Dialog } from 'vant'; // import router from '../router/router';\n\n/* const codeMessage = {\r\n  200: '服务器成功返回请求的数据',\r\n  201: '新建或修改数据成功',\r\n  202: '一个请求已经进入后台排队（异步任务）',\r\n  204: '删除数据成功',\r\n  400: '发出的请求有错误，服务器没有进行，新建或修改数据的操作',\r\n  401: '用户没有权限（用户名、密码、令牌错误）',\r\n  403: '用户得到授权，但是访问是被禁止的',\r\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作',\r\n  406: '请求的格式不可得',\r\n  410: '请求的资源被永久删除，且不会再得到',\r\n  422: '当创建一个对象时，发生一个验证错误',\r\n  500: '服务器发生错误，请检查服务器',\r\n  502: '网关错误',\r\n  503: '服务不可用，服务暂时过载或维护',\r\n  504: '网关超时'\r\n} */\n\nvar loadingInstance;\nvar service = axios.create({\n  baseURL: '/',\n  timeout: 60000\n});\n/**\r\n * og值\r\n * 0 PC\r\n * 1 H5\r\n * 2 ios\r\n * 3 Android\r\n */\n\nservice.interceptors.request.use(function (config) {\n  var token = window.localStorage.getItem('token');\n\n  if (token) {\n    Object.assign(config, {\n      headers: {\n        __vt_param__: window.localStorage.getItem('token')\n      }\n    });\n  } else {\n    Object.assign(config, {\n      // v1\n      headers: {\n        accessToken: window.localStorage.getItem('accessToken'),\n        og: 1\n      } // v2\n      // headers: { accessToken: window.localStorage.getItem('accessToken'), og: 1,\n      // 'api-version': '1.0' },\n\n    });\n  }\n\n  loadingInstance = Toast.loading({\n    duration: 0,\n    forbidClick: true,\n    loadingType: 'spinner',\n    message: '加载中...'\n  });\n  return config;\n}, function (error) {\n  Promise.reject(error);\n});\nservice.interceptors.response.use(function (response) {\n  loadingInstance.clear(); // if (response.data && !response.data.isOk) {\n  //   Toast.fail('接口调用失败');\n  // }\n\n  if (response.data.httpCode === 401) {\n    // Toast.fail('没有登录');\n    // app集成\n    Dialog.alert({\n      title: 'token已过期',\n      message: '请重新登录！'\n    }).then(function () {\n      var appJSObject = window.AppJSObject;\n\n      if (appJSObject) {\n        appJSObject.go_app('token');\n      }\n    });\n  } else if (response.data.httpCode === 403) {\n    Toast.fail(response.data.msg); // router.push('/');\n  } else if (response.data.httpCode === 303) {\n    Toast.fail(response.data.msg);\n  }\n\n  var res = response.data;\n  return res;\n}, function (error) {\n  console.log(error);\n  loadingInstance.clear();\n  Toast.fail('服务器忙，请稍后重试！'); // Message.error('获取数据失败，请稍后重试。');\n\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["E:\\QF\\H5-vue\\school\\src\\utils\\request.js"],"names":["axios","Toast","Dialog","loadingInstance","service","create","baseURL","timeout","interceptors","request","use","config","token","window","localStorage","getItem","Object","assign","headers","__vt_param__","accessToken","og","loading","duration","forbidClick","loadingType","message","error","Promise","reject","response","clear","data","httpCode","alert","title","then","appJSObject","AppJSObject","go_app","fail","msg","res","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B,C,CACA;;AAEA;;;;;;;;;;;;;;;;;;AAiBA,IAAIC,eAAJ;AAEA,IAAMC,UAAUJ,MAAMK,MAAN,CAAa;AAC3BC,WAAS,GADkB;AAE3BC,WAAS;AAFkB,CAAb,CAAhB;AAIA;;;;;;;;AAOAH,QAAQI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAACC,MAAD,EAAY;AAC3C,MAAMC,QAAQC,OAAOC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;;AACA,MAAIH,KAAJ,EAAW;AACTI,WAAOC,MAAP,CAAcN,MAAd,EAAsB;AACpBO,eAAS;AAAEC,sBAAcN,OAAOC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B;AAAhB;AADW,KAAtB;AAGD,GAJD,MAIO;AACLC,WAAOC,MAAP,CAAcN,MAAd,EAAsB;AACpB;AACAO,eAAS;AAAEE,qBAAaP,OAAOC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAf;AAA2DM,YAAI;AAA/D,OAFW,CAGpB;AACA;AACA;;AALoB,KAAtB;AAOD;;AACDlB,oBAAkBF,MAAMqB,OAAN,CAAc;AAC9BC,cAAU,CADoB;AAE9BC,iBAAa,IAFiB;AAG9BC,iBAAa,SAHiB;AAI9BC,aAAS;AAJqB,GAAd,CAAlB;AAMA,SAAOf,MAAP;AACD,CAtBD,EAsBG,UAACgB,KAAD,EAAW;AACZC,UAAQC,MAAR,CAAeF,KAAf;AACD,CAxBD;AA0BAvB,QAAQI,YAAR,CAAqBsB,QAArB,CAA8BpB,GAA9B,CAAkC,UAACoB,QAAD,EAAc;AAC9C3B,kBAAgB4B,KAAhB,GAD8C,CAE9C;AACA;AACA;;AACA,MAAID,SAASE,IAAT,CAAcC,QAAd,KAA2B,GAA/B,EAAoC;AAClC;AACA;AACA/B,WAAOgC,KAAP,CAAa;AACXC,aAAO,UADI;AAEXT,eAAS;AAFE,KAAb,EAGGU,IAHH,CAGQ,YAAM;AACZ,UAAMC,cAAcxB,OAAOyB,WAA3B;;AACA,UAAID,WAAJ,EAAiB;AACfA,oBAAYE,MAAZ,CAAmB,OAAnB;AACD;AACF,KARD;AASD,GAZD,MAYO,IAAIT,SAASE,IAAT,CAAcC,QAAd,KAA2B,GAA/B,EAAoC;AACzChC,UAAMuC,IAAN,CAAWV,SAASE,IAAT,CAAcS,GAAzB,EADyC,CAEzC;AACD,GAHM,MAGA,IAAIX,SAASE,IAAT,CAAcC,QAAd,KAA2B,GAA/B,EAAoC;AACzChC,UAAMuC,IAAN,CAAWV,SAASE,IAAT,CAAcS,GAAzB;AACD;;AACD,MAAMC,MAAMZ,SAASE,IAArB;AACA,SAAOU,GAAP;AACD,CAzBD,EAyBG,UAACf,KAAD,EAAW;AACZgB,UAAQC,GAAR,CAAYjB,KAAZ;AACAxB,kBAAgB4B,KAAhB;AACA9B,QAAMuC,IAAN,CAAW,aAAX,EAHY,CAIZ;;AACA,SAAOZ,QAAQC,MAAR,CAAeF,KAAf,CAAP;AACD,CA/BD;AAiCA,eAAevB,OAAf","sourcesContent":["import axios from 'axios';\r\nimport { Toast, Dialog } from 'vant';\r\n// import router from '../router/router';\r\n\r\n/* const codeMessage = {\r\n  200: '服务器成功返回请求的数据',\r\n  201: '新建或修改数据成功',\r\n  202: '一个请求已经进入后台排队（异步任务）',\r\n  204: '删除数据成功',\r\n  400: '发出的请求有错误，服务器没有进行，新建或修改数据的操作',\r\n  401: '用户没有权限（用户名、密码、令牌错误）',\r\n  403: '用户得到授权，但是访问是被禁止的',\r\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作',\r\n  406: '请求的格式不可得',\r\n  410: '请求的资源被永久删除，且不会再得到',\r\n  422: '当创建一个对象时，发生一个验证错误',\r\n  500: '服务器发生错误，请检查服务器',\r\n  502: '网关错误',\r\n  503: '服务不可用，服务暂时过载或维护',\r\n  504: '网关超时'\r\n} */\r\nlet loadingInstance;\r\n\r\nconst service = axios.create({\r\n  baseURL: '/',\r\n  timeout: 60000,\r\n});\r\n/**\r\n * og值\r\n * 0 PC\r\n * 1 H5\r\n * 2 ios\r\n * 3 Android\r\n */\r\nservice.interceptors.request.use((config) => {\r\n  const token = window.localStorage.getItem('token');\r\n  if (token) {\r\n    Object.assign(config, {\r\n      headers: { __vt_param__: window.localStorage.getItem('token') },\r\n    });\r\n  } else {\r\n    Object.assign(config, {\r\n      // v1\r\n      headers: { accessToken: window.localStorage.getItem('accessToken'), og: 1 },\r\n      // v2\r\n      // headers: { accessToken: window.localStorage.getItem('accessToken'), og: 1,\r\n      // 'api-version': '1.0' },\r\n    });\r\n  }\r\n  loadingInstance = Toast.loading({\r\n    duration: 0,\r\n    forbidClick: true,\r\n    loadingType: 'spinner',\r\n    message: '加载中...',\r\n  });\r\n  return config;\r\n}, (error) => {\r\n  Promise.reject(error);\r\n});\r\n\r\nservice.interceptors.response.use((response) => {\r\n  loadingInstance.clear();\r\n  // if (response.data && !response.data.isOk) {\r\n  //   Toast.fail('接口调用失败');\r\n  // }\r\n  if (response.data.httpCode === 401) {\r\n    // Toast.fail('没有登录');\r\n    // app集成\r\n    Dialog.alert({\r\n      title: 'token已过期',\r\n      message: '请重新登录！',\r\n    }).then(() => {\r\n      const appJSObject = window.AppJSObject;\r\n      if (appJSObject) {\r\n        appJSObject.go_app('token');\r\n      }\r\n    });\r\n  } else if (response.data.httpCode === 403) {\r\n    Toast.fail(response.data.msg);\r\n    // router.push('/');\r\n  } else if (response.data.httpCode === 303) {\r\n    Toast.fail(response.data.msg);\r\n  }\r\n  const res = response.data;\r\n  return res;\r\n}, (error) => {\r\n  console.log(error);\r\n  loadingInstance.clear();\r\n  Toast.fail('服务器忙，请稍后重试！');\r\n  // Message.error('获取数据失败，请稍后重试。');\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default service;\r\n"]}]}