{"remainingRequest":"E:\\PJH5\\school\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\PJH5\\school\\src\\views\\application\\exam\\examStu.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\PJH5\\school\\src\\views\\application\\exam\\examStu.vue","mtime":1545379464328},{"path":"E:\\PJH5\\school\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544431688682},{"path":"E:\\PJH5\\school\\node_modules\\babel-loader\\lib\\index.js","mtime":1544431687962},{"path":"E:\\PJH5\\school\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544431688682},{"path":"E:\\PJH5\\school\\node_modules\\vue-loader\\lib\\index.js","mtime":1544431709523}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex';\r\nimport backButton from '@/components/backButton/backButton.vue';\r\nimport { getCurrentYear, getYearList, queryStuClassInfo, queryExamList, examSturesult, selectStuTotal } from '@/services/exam';\r\n\r\nexport default {\r\n  name: 'examStu',\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      yearId: '',\r\n      yearName: '',\r\n      yearList: [],\r\n      yearNameList: [],\r\n      showXn: false,\r\n      showKs: false,\r\n      examName: '',\r\n      examId: '',\r\n      examInfoList: [],\r\n      examNameList: [],\r\n      totalScore: [],\r\n      examResult: [],\r\n      list: [],\r\n      taskNameList: [],\r\n      ksxqList: [],\r\n    };\r\n  },\r\n  components: {\r\n    'back-button': backButton,\r\n  },\r\n  computed: {\r\n    ...mapGetters('system', ['userInfo']),\r\n  },\r\n  methods: {\r\n    onClickLeft() {\r\n      this.$router.go(-1);\r\n    },\r\n    onXn(value) {\r\n      this.showXn = false;\r\n      this.yearName = value;\r\n      this.yearList.forEach((element) => {\r\n        if (element.name === value) {\r\n          this.yearId = element.id;\r\n          this.queryStuClassInfo();\r\n        }\r\n      });\r\n    },\r\n    onKs(value) {\r\n      this.showKs = false;\r\n      this.examName = value;\r\n      this.examList.forEach((element) => {\r\n        if (element.examName === value) {\r\n          this.examId = element.id;\r\n          this.examSturesult();\r\n        }\r\n      });\r\n    },\r\n    async getCurrentYear() {\r\n      const data = await getCurrentYear();\r\n      this.yearId = data.data.id;\r\n      this.yearName = data.data.name;\r\n      this.queryStuClassInfo();\r\n    },\r\n    async getYearList() {\r\n      const data = await getYearList();\r\n      this.yearList = data.data;\r\n      this.yearList.forEach((element) => {\r\n        this.yearNameList.push(element.name);\r\n      });\r\n    },\r\n    async queryStuClassInfo() {\r\n      const stuListId = [];\r\n      stuListId.push(this.userInfo.id);\r\n      const data = await queryStuClassInfo({ schoolYearId: this.yearId, sysUserId: stuListId });\r\n      if (data.data.schoolPjclassunion != null &&\r\n      data.data.schoolPjclassunion.schoolGrade != null) {\r\n        this.queryExamList(data.data.schoolPjclassunion.schoolGrade.id);\r\n      }\r\n    },\r\n    async queryExamList(grade) {\r\n      const data = await queryExamList({ yearId: this.yearId, gradeId: grade });\r\n      this.examList = data.data;\r\n      if (this.examList != null && this.examList.length > 0) {\r\n        this.examId = this.examList[0].id;\r\n        this.examName = this.examList[0].examName;\r\n        this.examSturesult();\r\n      }\r\n      this.examNameList = [];\r\n      this.examList.forEach((element) => {\r\n        this.examNameList.push(element.examName);\r\n      });\r\n    },\r\n    async examSturesult() {\r\n      const data = await examSturesult({ stuId: this.userInfo.id, taskId: this.examId });\r\n      this.examResult = data.data;\r\n      if (this.examResult.bjpm) {\r\n        this.examResult.bjpm = Math.round(this.examResult.bjpm);\r\n      }\r\n      if (this.examResult.njpm) {\r\n        this.examResult.njpm = Math.round(this.examResult.njpm);\r\n      }\r\n      if (this.examResult.gkcj) {\r\n        this.ksxqList = [];\r\n        let x;\r\n        const size = 4;\r\n        for (x = 0; x < this.examResult.gkcj.length / size; x += 1) {\r\n          const start = x * size;\r\n          const end = start + size;\r\n          this.ksxqList.push(this.examResult.gkcj.slice(start, end));\r\n        }\r\n      }\r\n    },\r\n    async selectStuTotal() {\r\n      const { data } = await selectStuTotal({ stuId: this.userInfo.id });\r\n      this.stuTotle = data;\r\n      this.totalScore = [];\r\n      this.taskNameList = [];\r\n      let i = 1;\r\n      this.totalScore[0] = {};\r\n      this.taskNameList.push('');\r\n      this.stuTotle.forEach((element) => {\r\n        this.taskNameList.push(element.examName);\r\n        this.totalScore[i] = { value: element.score, taskId: element.taskId, stuId: element.stuId };\r\n        i += 1;\r\n      });\r\n      this.getEchars();\r\n    },\r\n    getEchars() {\r\n      this.userName = this.userInfo.userName;\r\n      // 基于准备好的dom，初始化echars实例\r\n      const myChart = this.$echarts.init(document.getElementById('main'));\r\n      window.onresize = myChart.resize;\r\n      // myChart.on('click', params =>\r\n      //   this.$router.push({\r\n      //     name: 'stuExamInfo',\r\n      //     params: { taskId: params.data.taskId, stuId: params.data.stuId },\r\n      //   }));\r\n      myChart.setOption({\r\n        title: {\r\n          text: '考试成绩总分走向',\r\n          left: 'center',\r\n        },\r\n        calculable: true,\r\n        dataZoom: [\r\n          {\r\n            type: 'slider',\r\n            xAxisIndex: [0],\r\n            show: false,\r\n            start: 0,\r\n            end: 50,\r\n            zoomLock: true,\r\n          },\r\n          {\r\n            type: 'inside',\r\n            xAxisIndex: [0],\r\n            show: false,\r\n            start: 0,\r\n            end: 50,\r\n            zoomLock: true,\r\n          },\r\n        ],\r\n        grid: {\r\n          left: '4%',\r\n          right: '4%',\r\n          containLabel: true,\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.taskNameList,\r\n          axisLabel: {\r\n            interval: 0,\r\n          },\r\n          axisTick: {\r\n            interval: 0,\r\n            inside: true,\r\n            alignWithLabel: true,\r\n            lignWithLabel: true,\r\n          },\r\n        }],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n          },\r\n        ],\r\n        series: [{\r\n          type: 'line',\r\n          smooth: true,\r\n          clickable: true,\r\n          showSymbol: true,\r\n          symbol: 'circle',\r\n          itemStyle: { normal: { color: '#3399FF', areaStyle: { type: 'default' }, label: { show: true } } },\r\n          data: this.totalScore,\r\n        }],\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getCurrentYear();\r\n    this.getYearList();\r\n    this.selectStuTotal();\r\n  },\r\n};\r\n",{"version":3,"sources":["examStu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"examStu.vue","sourceRoot":"src\\views\\application\\exam","sourcesContent":["<template>\r\n  <div class=\"addressBook\">\r\n    <back-button></back-button>\r\n    <van-nav-bar\r\n      title=\"成绩系统\"\r\n      left-text=\"返回\"\r\n      right-text=\" \"\r\n      left-arrow\r\n      fixed\r\n      @click-left=\"onClickLeft\"/>\r\n      <van-cell-group>\r\n      <van-cell class=\"select\" v-model=\"yearName\"  @click=\"showXn = true;\"\r\n      is-link border input-align=\"center\"/>\r\n        <van-popup v-model=\"showXn\" position=\"bottom\">\r\n          <van-picker show-toolbar :columns=\"yearNameList\" @cancel=\"showXn = false\"\r\n          @confirm=\"onXn\"/>\r\n        </van-popup>\r\n      <van-cell class=\"select\" v-model=\"examName\" @click=\"showKs = true;\" is-link border\r\n      input-align=\"center\"/>\r\n        <van-popup v-model=\"showKs\" position=\"bottom\">\r\n          <van-picker show-toolbar :columns=\"examNameList\" @cancel=\"showKs = false\"\r\n          @confirm=\"onKs\"/>\r\n        </van-popup>\r\n      </van-cell-group>\r\n      <div style=\"background:#F8F8F8;height:7px;\"></div>\r\n      <van-row  class=\"total\" type=\"flex\" justify=\"center\">\r\n        <van-col style=\"color:#3399FF;border-right:1px solid #B0C4DE\" span=\"8\">\r\n          <p style=\"margin-bottom:15px;\">总分</p><p>{{this.examResult.total}}</p></van-col>\r\n        <van-col style=\"border-right:1px solid #B0C4DE\" span=\"8\">\r\n          <p style=\"margin-bottom:15px;\">班级排名</p><p>{{this.examResult.bjpm}}</p></van-col>\r\n        <van-col span=\"8\"><p style=\"margin-bottom:15px;\">年级排名\r\n          </p><p>{{this.examResult.njpm}}</p></van-col>\r\n      </van-row>\r\n      <div style=\"background:#F8F8F8;height:7px;\"></div>\r\n      <van-row  class=\"total\" type=\"flex\"\r\n      v-for=\"(row, index) in this.ksxqList\" :key = \"index\">\r\n        <van-col style=\"border-right:1px solid #B0C4DE;\" span=\"6\"\r\n        v-for=\"(cj, index) in row\" :key = \"index\">\r\n          <p style=\"margin-bottom:15px;color:#3399FF;\">{{cj.finalScore}}</p>\r\n          <p>{{cj.examSubjectruleInfo.schoolCourse.kcmc}}</p></van-col>\r\n      </van-row>\r\n      <div style=\"background:#F8F8F8;height:15px;\"></div>\r\n      <div style=\"overflow-x: scroll\">\r\n        <div id=\"main\" style=\"margin-top:10px;margin-bottom:15px;\r\n        height: 300px;font-size: 5px;margin-left:5px;padding: 5px\"></div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport backButton from '@/components/backButton/backButton.vue';\r\nimport { getCurrentYear, getYearList, queryStuClassInfo, queryExamList, examSturesult, selectStuTotal } from '@/services/exam';\r\n\r\nexport default {\r\n  name: 'examStu',\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      yearId: '',\r\n      yearName: '',\r\n      yearList: [],\r\n      yearNameList: [],\r\n      showXn: false,\r\n      showKs: false,\r\n      examName: '',\r\n      examId: '',\r\n      examInfoList: [],\r\n      examNameList: [],\r\n      totalScore: [],\r\n      examResult: [],\r\n      list: [],\r\n      taskNameList: [],\r\n      ksxqList: [],\r\n    };\r\n  },\r\n  components: {\r\n    'back-button': backButton,\r\n  },\r\n  computed: {\r\n    ...mapGetters('system', ['userInfo']),\r\n  },\r\n  methods: {\r\n    onClickLeft() {\r\n      this.$router.go(-1);\r\n    },\r\n    onXn(value) {\r\n      this.showXn = false;\r\n      this.yearName = value;\r\n      this.yearList.forEach((element) => {\r\n        if (element.name === value) {\r\n          this.yearId = element.id;\r\n          this.queryStuClassInfo();\r\n        }\r\n      });\r\n    },\r\n    onKs(value) {\r\n      this.showKs = false;\r\n      this.examName = value;\r\n      this.examList.forEach((element) => {\r\n        if (element.examName === value) {\r\n          this.examId = element.id;\r\n          this.examSturesult();\r\n        }\r\n      });\r\n    },\r\n    async getCurrentYear() {\r\n      const data = await getCurrentYear();\r\n      this.yearId = data.data.id;\r\n      this.yearName = data.data.name;\r\n      this.queryStuClassInfo();\r\n    },\r\n    async getYearList() {\r\n      const data = await getYearList();\r\n      this.yearList = data.data;\r\n      this.yearList.forEach((element) => {\r\n        this.yearNameList.push(element.name);\r\n      });\r\n    },\r\n    async queryStuClassInfo() {\r\n      const stuListId = [];\r\n      stuListId.push(this.userInfo.id);\r\n      const data = await queryStuClassInfo({ schoolYearId: this.yearId, sysUserId: stuListId });\r\n      if (data.data.schoolPjclassunion != null &&\r\n      data.data.schoolPjclassunion.schoolGrade != null) {\r\n        this.queryExamList(data.data.schoolPjclassunion.schoolGrade.id);\r\n      }\r\n    },\r\n    async queryExamList(grade) {\r\n      const data = await queryExamList({ yearId: this.yearId, gradeId: grade });\r\n      this.examList = data.data;\r\n      if (this.examList != null && this.examList.length > 0) {\r\n        this.examId = this.examList[0].id;\r\n        this.examName = this.examList[0].examName;\r\n        this.examSturesult();\r\n      }\r\n      this.examNameList = [];\r\n      this.examList.forEach((element) => {\r\n        this.examNameList.push(element.examName);\r\n      });\r\n    },\r\n    async examSturesult() {\r\n      const data = await examSturesult({ stuId: this.userInfo.id, taskId: this.examId });\r\n      this.examResult = data.data;\r\n      if (this.examResult.bjpm) {\r\n        this.examResult.bjpm = Math.round(this.examResult.bjpm);\r\n      }\r\n      if (this.examResult.njpm) {\r\n        this.examResult.njpm = Math.round(this.examResult.njpm);\r\n      }\r\n      if (this.examResult.gkcj) {\r\n        this.ksxqList = [];\r\n        let x;\r\n        const size = 4;\r\n        for (x = 0; x < this.examResult.gkcj.length / size; x += 1) {\r\n          const start = x * size;\r\n          const end = start + size;\r\n          this.ksxqList.push(this.examResult.gkcj.slice(start, end));\r\n        }\r\n      }\r\n    },\r\n    async selectStuTotal() {\r\n      const { data } = await selectStuTotal({ stuId: this.userInfo.id });\r\n      this.stuTotle = data;\r\n      this.totalScore = [];\r\n      this.taskNameList = [];\r\n      let i = 1;\r\n      this.totalScore[0] = {};\r\n      this.taskNameList.push('');\r\n      this.stuTotle.forEach((element) => {\r\n        this.taskNameList.push(element.examName);\r\n        this.totalScore[i] = { value: element.score, taskId: element.taskId, stuId: element.stuId };\r\n        i += 1;\r\n      });\r\n      this.getEchars();\r\n    },\r\n    getEchars() {\r\n      this.userName = this.userInfo.userName;\r\n      // 基于准备好的dom，初始化echars实例\r\n      const myChart = this.$echarts.init(document.getElementById('main'));\r\n      window.onresize = myChart.resize;\r\n      // myChart.on('click', params =>\r\n      //   this.$router.push({\r\n      //     name: 'stuExamInfo',\r\n      //     params: { taskId: params.data.taskId, stuId: params.data.stuId },\r\n      //   }));\r\n      myChart.setOption({\r\n        title: {\r\n          text: '考试成绩总分走向',\r\n          left: 'center',\r\n        },\r\n        calculable: true,\r\n        dataZoom: [\r\n          {\r\n            type: 'slider',\r\n            xAxisIndex: [0],\r\n            show: false,\r\n            start: 0,\r\n            end: 50,\r\n            zoomLock: true,\r\n          },\r\n          {\r\n            type: 'inside',\r\n            xAxisIndex: [0],\r\n            show: false,\r\n            start: 0,\r\n            end: 50,\r\n            zoomLock: true,\r\n          },\r\n        ],\r\n        grid: {\r\n          left: '4%',\r\n          right: '4%',\r\n          containLabel: true,\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.taskNameList,\r\n          axisLabel: {\r\n            interval: 0,\r\n          },\r\n          axisTick: {\r\n            interval: 0,\r\n            inside: true,\r\n            alignWithLabel: true,\r\n            lignWithLabel: true,\r\n          },\r\n        }],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n          },\r\n        ],\r\n        series: [{\r\n          type: 'line',\r\n          smooth: true,\r\n          clickable: true,\r\n          showSymbol: true,\r\n          symbol: 'circle',\r\n          itemStyle: { normal: { color: '#3399FF', areaStyle: { type: 'default' }, label: { show: true } } },\r\n          data: this.totalScore,\r\n        }],\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getCurrentYear();\r\n    this.getYearList();\r\n    this.selectStuTotal();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n  .addressBook {\r\n    padding-top: 44px;\r\n  }\r\n  .select {\r\n    width: 70%;\r\n    margin:0 auto;\r\n    color:#3399FF;\r\n    text-align:center;\r\n  }\r\n  .total {\r\n    text-align:center;\r\n    padding:15px 0;\r\n  }\r\n</style>\r\n"]}]}